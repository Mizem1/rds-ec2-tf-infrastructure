name: "Terraform Deployment"

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  id-token: write  # Required for AWS OIDC connection
  contents: read   # Required for actions/checkout
  pull-requests: write  # Required for GitHub bot to comment PR

env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Generate SSH Key Pair
        run: |
          ssh-keygen -t rsa -b 4096 -C "github-action-key" -f backend-key -N ""
          echo "TF_VAR_PUBLIC_KEY=$(cat backend-key.pub | base64 -w 0)" >> $GITHUB_ENV
          echo "TF_VAR_private_key=$(cat backend-key | base64 -w 0)" >> $GITHUB_ENV
      
      

      - name: Store Private Key Securely
        run: |
            mkdir -p ~/.ssh
            echo "$PRIVATE_KEY" | base64 -d > ~/.ssh/backend-key
            chmod 400 ~/.ssh/backend-key
        

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ secrets.AWS_BUCKET_NAME }}" -backend-config="key=${{ secrets.AWS_BUCKET_KEY_NAME }}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false
        env:
          TF_VAR_key_name: "backend-key"
          TF_VAR_PUBLIC_KEY: "$PUBLIC_KEY"
          TF_VAR_DB_NAME: ${{ secrets.TF_VAR_DB_NAME }}
          TF_VAR_DB_USERNAME: ${{ secrets.TF_VAR_DB_USERNAME }}
          TF_VAR_DB_PASSWORD: ${{ secrets.TF_VAR_DB_PASSWORD }}


      - name: Cleanup SSH Keys
        run: rm -f backend-key backend-key.pub ~/.ssh/backend-key